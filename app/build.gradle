apply plugin: 'android-sdk-manager'
apply plugin: 'com.android.application'
apply plugin: 'com.github.triplet.play'
apply plugin: 'io.fabric'

dependencies {
  compile project(':core')

  compile 'com.android.support:support-v4:23.0.+'
  compile 'com.android.support:appcompat-v7:23.0.+'
  compile 'com.android.support:recyclerview-v7:23.0.+'
  compile 'com.android.support:cardview-v7:23.0.+'
  compile 'com.android.support:design:23.0.+'
  compile 'com.jakewharton:butterknife:7.0.+'
  compile 'com.jakewharton.timber:timber:3.1.+'
  compile 'com.squareup.okhttp:okhttp:2.5.+'
  compile 'com.squareup.picasso:picasso:2.5.+'

  compile('io.fabric.sdk.android:fabric:1.3.+')
  compile('com.crashlytics.sdk.android:crashlytics:2.4.+@aar')
  compile('com.crashlytics.sdk.android:answers:1.2.+@aar')
  compile('com.crashlytics.sdk.android:beta:1.1.+@aar')
  compile('com.crashlytics.sdk.android:crashlytics-core:2.3.+@aar')


  compile fileTree(dir: 'libs', include: ['*.jar'])

  androidTestCompile ('com.android.support.test.espresso:espresso-core:2.+'){
    exclude module: 'support-annotations'
  }
}

android {
  compileSdkVersion 23
  buildToolsVersion "23.0.1"

  defaultConfig {
    applicationId "de.dev.eth0.rssreader"
    minSdkVersion 17
    targetSdkVersion 23
    versionCode 1
    versionName "RSS Reader 0.1"
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }

  lintOptions {
    abortOnError false
    disable 'GradleDynamicVersion', ' InvalidPackage'
    enable 'EasterEgg', 'FieldGetter', 'IconExpectedSize', 'NegativeMargin', 'NewerVersionAvailable', 'GradleDependency', 'UnusedIds'
  }
  // remove license.txt from dependencies
  packagingOptions {
    exclude 'LICENSE.txt'
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/services/javax.annotation.processing.Processor'
  }

  sourceSets {
    test {
      java.srcDirs = ['src/androidTest/java']
    }
    androidTest.setRoot('src/androidTest')
  }


  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }

  signingConfigs {
    releaseSigning {
      storeFile file("../../misc/android-release-key.keystore")
      storePassword ""
      keyAlias "android-release-key"
      keyPassword ""

    }
  }
  productFlavors {
    deveth0de {
      applicationId "de.dev.eth0.deveth0rssreader"
      buildConfigField 'String', 'PAGE_URL', '"https://dev-eth0.de"'
      buildConfigField 'String', 'FEED_URL', '"https://dev-eth0.de/feed"'
      buildConfigField 'String', 'ABOUT_URL', '"https://dev-eth0.de"'
      buildConfigField 'String', 'DONATE_URL', '"https://dev-eth0.de"'
      buildConfigField 'String', 'BITCOIN_ADDRESS', '"foobar"'
    }
  }

  buildTypes {
    release {
      minifyEnabled true
      shrinkResources true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), '../config/proguard-rules.txt'
      versionNameSuffix "-release"
      signingConfig signingConfigs.releaseSigning
    }
    debug  {
      applicationIdSuffix ".debug"
      versionNameSuffix "-debug"
      testCoverageEnabled true
    }
  }
}

play {
  serviceAccountEmail = //TODO: add service account mail if required.
  pk12File = file('../../Misc/PlayStore/ServiceAccount.p12')
  uploadImages = true
}

android.applicationVariants.all { variant ->
  def name = variant.buildType.name
  name = name + "" +variant.productFlavors.name

  def checkstyle = project.tasks.create "checkstyle${name.capitalize()}", Checkstyle
  checkstyle.dependsOn variant.javaCompile
  checkstyle.source variant.javaCompile.source
  checkstyle.classpath = project.fileTree(variant.javaCompile.destinationDir)
  checkstyle.exclude('**/BuildConfig.java')
  checkstyle.exclude('**/R.java')
  checkstyle.ignoreFailures(true)
  project.tasks.getByName("check").dependsOn checkstyle
}

gradle.taskGraph.whenReady { taskGraph ->
  if((taskGraph.hasTask(':RssReader:assembleRelease') || taskGraph.hasTask(':RssReader:publishDeveth0deRelease'))
    && project(":RssReader").android.buildTypes.release.signingConfig != null) {
    def pass = System.console().readPassword("\nPlease enter key passphrase: ")
    project(":RssReader").android.signingConfigs.releaseSigning.storePassword = new String(pass)
    project(":RssReader").android.signingConfigs.releaseSigning.keyPassword = new String(pass)
  }
}
